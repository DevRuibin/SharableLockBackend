services:
  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: ruibin
      POSTGRES_PASSWORD: ruibin123
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin

  elasticsearch:
    image: elasticsearch:7.17.21
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - esnet


  kibana:
    image: kibana:7.17.21
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    networks:
      - esnet


  rabbitmq:
    build: ./RabbitMQ
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
       - rabbitmq

  redis:
    image: "redis:7.4-rc1-bookworm"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redis
      - spring
      - postgres
      - zipkin

  nginx:
    build: StaticServer/nginx
    container_name: nginx
    ports:
      - "8500:80"
      - "8501:443"
    volumes:
        - ./StaticServer/nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./StaticServer/uploads:/usr/share/nginx/html:ro
    networks:
        - nginx
    depends_on:
      - static-server-spring


  spring-config-server:
    build: ./config-server
    container_name: spring-config-server
    networks:
        - spring
        - postgres
        - zipkin
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8888:8080"


  spring-auth-service:
    build: ./authentication
    container_name: spring-auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
    depends_on:
      - spring-config-server

  spring-discovery-service:
    build: ./discovery
    container_name: spring-discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
    depends_on:
      - spring-config-server

  spring-gateway-service:
    build: ./gateway
    container_name: spring-gateway-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8222:8080"
    networks:
        - spring
        - postgres
        - zipkin
    depends_on:
      - spring-config-server


  spring-lock-service:
    build: ./lock
    container_name: spring-lock-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
    depends_on:
      - spring-config-server

  spring-log-service:
    build: ./logging
    container_name: spring-log-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
        - esnet
    depends_on:
      - spring-config-server


  spring-message-service:
    build: ./message
    container_name: spring-message-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
        - esnet
        - rabbitmq
    depends_on:
      - spring-config-server

  spring-mqtt-service:
    build: ./mqtt-server
    container_name: spring-mqtt-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
    depends_on:
      - spring-config-server


  static-server-spring:
    build: ./StaticServer/Server
    container_name: spring-static-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
        - nginx
    volumes:
      - ./StaticServer/uploads:/uploads

    depends_on:
      - spring-config-server

  spring-user-service:
    build: ./user
    container_name: spring-user-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
        - spring
        - postgres
        - zipkin
        - redis
    depends_on:
      - spring-config-server





networks:
  postgres:
    driver: bridge
  zipkin:
    driver: bridge
  esnet:
    driver: bridge
  spring:
    driver: bridge
  redis:
    driver: bridge
  rabbitmq:
    driver: bridge
  nginx:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  rabbitmq_data:
  esdata:
  redis_data:

